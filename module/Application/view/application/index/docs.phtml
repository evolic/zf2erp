<?php
// module/EvlErp/view/evl-erp/vat-rates/add.phtml:

// Le styles
$idx = 100;
$this->headLink()
//     ->offsetSetStylesheet(++$idx, $this->basePath() . '/js/vendor/fancybox/2.1.5/jquery.fancybox.css', 'media')
    ->offsetSetStylesheet(++$idx, $this->basePath() . '/css/3d.css', 'all')
    ;

// Scripts
$idx = 100;
$this->bodyScript()
//     ->offsetSetFile(++$idx, $this->basePath() . '/js/vendor/jquery/mousewheel/3.0.6/jquery.mousewheel.min.js')
//     ->offsetSetFile(++$idx, $this->basePath() . '/js/vendor/fancybox/2.1.5/jquery.fancybox.min.js')
//     ->offsetSetFile(++$idx, $this->basePath() . '/js/module/app/docs.js')
;
?>

<h1><?php echo $this->translate('Documentation'); ?></h1>

<p>
  Project was implemented according to specification made for the Contest organized by <a href="www.unity.pl">Grupa Unity</a>.
  It was related to Techcamp conference.
</p>

<p>
  Full specification in Polish you can find out <a href="/docs/Zadanie-programistyczne2.docx">here</a> (MS Office 2007 document).
</p>

<p>In the project there were used:</p>

<ul>
  <li>PostgreSQL,</li>
  <li>Zend Framework 2.2,</li>
  <li>Doctrine 2 ORM,</li>
  <li>Gedmo - Doctrine 2 ORM Extension,</li>
  <li>jQuery 1.9.x,</li>
  <li>jQuery DataTables 1.9.4,</li>
  <li>Bootstrap 3.0.3,</li>
  <li>Bootstrap TouchSpin 2.3.0</li>
</ul>

<h2><?php echo $this->translate('ERD Diagram made with DB Designer'); ?></h2>

<div class="rotated-ct">
  <a class="fancybox" rel="group" href="/docs/erd-diagram.png">
    <img class="rotated" src="/docs/erd-diagram.png" alt="ERD Diagram" />
  </a>
  <?php /*?>
  <br>
  <span><?php echo $this->translate('Click on the picture to see full ERD diagram'); ?></span>
  <?php */?>
</div>

<h2>TODO list</h2>

<ul>
  <li>Check if product name is not taken by another product while updating data</li>
  <li>Sort available suppliers by their name in add/edit product form</li>
  <li>Add recalculating product brutto price in JavaScript</li>
  <li>Implement handling clicking on cancel button in the forms</li>
  <li>Cut too long strings, becasue they cause exception while saving that data in database</li>
  <li>Move interfaces files to separate folders</li>
  <li>Do not create Form object in the controllers, but use appropriate methods
  <li>Add translation of the messages after (un)successful adding new object
  <li>
    Implement deleting objects of all entities<br>
    <ul>
      <li>Integrate SoftDelete behaviour (from Gedmo extensions to Doctrine 2 ORM) with all database entities</li>
    </ul>
  </li>
  <li>
    Integrate Identification Numbers filters in Company form<br>
    <ul>
      <li>
        VAT Identification Number (e.g. NIP in Poland)<br>
        e.g. 526-030-07-24 => 5260300724
      </li>
      <li>
         Business Entity Identification Number (e.g. KRS in Poland)<br>
         e.g. 10069 => 0000010069
      </li>
    </ul>
  </li>
  <li>
    Integrate Identification Numbers validators in Company form<br>
    <ul>
      <li>VAT Identification Number (e.g. NIP in Poland)</li>
      <li>Enterprise Identification Number (e.g. REGON in Poland)</li>
      <li>Business Entity Identification Number (e.g. KRS in Poland)</li>
    </ul>
  </li>
  <li>Add unit tests</li>
  <li>Integrate Timestable behaviour (from Gedmo extensions to Doctrine 2 ORM) with all database entities</li>
  <li>Add Zend\Cache to speed up application</li>
  <li>Add additional indexes in the database e.g. for product name</li>
</ul>
